
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x9f\x98z\xe1I,\x03\t*\xc8D\x8c\xfd\x05N\xe4'
    
_lr_action_items = {'RETURN':([33,34,35,36,37,38,39,40,41,42,46,53,55,57,65,66,71,74,75,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,104,107,111,123,125,],[-58,-59,-33,-35,-16,-27,-22,-21,-56,-57,-41,-18,-17,-34,-54,-55,-53,-52,-23,-42,97,-43,-39,-38,-36,-37,-40,-26,-47,-49,-48,-46,-45,-44,-51,-50,-25,-19,-24,97,110,97,110,97,-20,]),'OLOGIC':([33,34,41,46,],[-58,-59,73,73,]),'LESS':([33,34,41,46,],[-58,-59,67,67,]),'AOLOGIC':([10,],[23,]),'NUMBER':([21,24,26,43,48,54,56,58,59,60,61,63,64,67,68,69,70,72,73,103,110,120,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'COMA':([38,81,],[62,102,]),'LESSTHAN':([33,34,41,46,],[-58,-59,69,69,]),'MINUS':([33,34,35,41,],[-58,-59,60,60,]),'RPAREN':([25,29,30,32,33,34,35,36,38,44,45,46,47,49,50,51,57,76,78,79,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,108,121,],[-29,-9,53,55,-58,-59,-33,-35,-27,-28,75,-41,77,-9,-8,80,-34,-42,-43,100,-11,-39,-38,-36,-37,-40,-26,-47,-49,-48,-46,-45,-44,-51,-50,-10,122,]),'STRINGS':([21,24,56,58,59,60,61,110,120,],[36,42,36,36,36,36,36,42,36,]),'PLUS':([33,34,35,41,],[-58,-59,59,59,]),'ASSIGN':([10,31,119,],[24,54,120,]),'$end':([1,2,3,8,12,27,33,34,35,36,37,38,39,40,41,42,46,53,55,57,65,66,71,74,75,76,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,113,118,125,],[-3,-5,-4,0,-1,-2,-58,-59,-33,-35,-16,-27,-22,-21,-56,-57,-41,-18,-17,-34,-54,-55,-53,-52,-23,-42,-43,-39,-38,-36,-37,-40,-26,-47,-49,-48,-46,-45,-44,-51,-50,-25,-19,-24,-7,-6,-20,]),'FUNCTION':([0,1,2,3,13,33,34,35,36,37,38,39,40,41,42,46,53,55,57,65,66,71,74,75,76,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,113,118,125,],[4,4,-5,-4,4,-58,-59,-33,-35,-16,-27,-22,-21,-56,-57,-41,-18,-17,-34,-54,-55,-53,-52,-23,-42,-43,-39,-38,-36,-37,-40,-26,-47,-49,-48,-46,-45,-44,-51,-50,-25,-19,-24,-7,-6,-20,]),'NOASSIG':([33,34,41,46,],[-58,-59,63,63,]),'PROMPT':([0,1,2,3,13,33,34,35,36,37,38,39,40,41,42,46,53,55,57,65,66,71,74,75,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,104,107,111,113,118,123,125,],[5,5,-5,-4,5,-58,-59,-33,-35,-16,-27,-22,-21,-56,-57,-41,-18,-17,-34,-54,-55,-53,-52,-23,-42,5,-43,-39,-38,-36,-37,-40,-26,-47,-49,-48,-46,-45,-44,-51,-50,-25,-19,-24,5,5,5,5,-7,-6,5,-20,]),'DIVIDE':([33,34,35,41,],[-58,-59,56,56,]),'FOR':([0,1,2,3,13,33,34,35,36,37,38,39,40,41,42,46,53,55,57,65,66,71,74,75,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,104,107,111,113,118,123,125,],[6,6,-5,-4,6,-58,-59,-33,-35,-16,-27,-22,-21,-56,-57,-41,-18,-17,-34,-54,-55,-53,-52,-23,-42,6,-43,-39,-38,-36,-37,-40,-26,-47,-49,-48,-46,-45,-44,-51,-50,-25,-19,-24,6,6,6,6,-7,-6,6,-20,]),'EQUALS':([33,34,41,46,],[-58,-59,68,68,]),'TIMES':([33,34,35,41,],[-58,-59,58,58,]),'WRITE':([0,1,2,3,13,33,34,35,36,37,38,39,40,41,42,46,53,55,57,65,66,71,74,75,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,104,107,111,113,118,123,125,],[7,7,-5,-4,7,-58,-59,-33,-35,-16,-27,-22,-21,-56,-57,-41,-18,-17,-34,-54,-55,-53,-52,-23,-42,7,-43,-39,-38,-36,-37,-40,-26,-47,-49,-48,-46,-45,-44,-51,-50,-25,-19,-24,7,7,7,7,-7,-6,7,-20,]),'END_LINE':([1,2,3,33,34,35,36,37,38,39,40,41,42,46,53,55,57,65,66,71,74,75,76,78,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,109,113,118,125,],[13,-5,-4,-58,-59,-33,-35,-16,-27,-22,-21,-56,-57,-41,-18,-17,-34,-54,-55,-53,-52,-23,-42,-43,103,-39,-38,-36,-37,-40,-26,-47,-49,-48,-46,-45,-44,-51,-50,-25,-19,-24,115,-7,-6,-20,]),'LPAREN':([5,6,7,10,11,18,28,],[19,20,21,25,26,29,49,]),'VAR':([0,1,2,3,13,33,34,35,36,37,38,39,40,41,42,46,53,55,57,65,66,71,74,75,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,104,107,111,113,118,123,125,],[9,9,-5,-4,9,-58,-59,-33,-35,-16,-27,-22,-21,-56,-57,-41,-18,-17,-34,-54,-55,-53,-52,-23,-42,9,-43,-39,-38,-36,-37,-40,-26,-47,-49,-48,-46,-45,-44,-51,-50,-25,-19,-24,9,9,9,9,-7,-6,9,-20,]),'LBLOCK':([80,100,122,],[101,104,123,]),'ID':([0,1,2,3,4,13,14,15,16,17,19,20,21,22,23,24,25,26,33,34,35,36,37,38,39,40,41,42,43,46,48,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,107,110,111,113,115,118,120,123,125,],[10,10,-5,-4,18,10,-30,-31,28,-32,30,31,34,38,39,34,38,34,-58,-59,-33,-35,-16,-27,-22,-21,-56,-57,34,-41,34,81,-18,34,-17,34,-34,34,34,34,34,38,34,34,-54,-55,34,34,34,34,-53,34,34,-52,-23,-42,10,-43,-39,-38,-36,-37,-40,-26,-47,-49,-48,-46,-45,-44,-51,-50,-25,-19,-24,10,34,10,10,34,10,-7,119,-6,34,10,-20,]),'EXCLA':([24,26,63,64,67,68,69,70,72,73,103,110,],[43,48,48,48,48,48,48,48,48,48,48,43,]),'IF':([0,1,2,3,13,33,34,35,36,37,38,39,40,41,42,46,53,55,57,65,66,71,74,75,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,104,107,111,113,118,123,125,],[11,11,-5,-4,11,-58,-59,-33,-35,-16,-27,-22,-21,-56,-57,-41,-18,-17,-34,-54,-55,-53,-52,-23,-42,11,-43,-39,-38,-36,-37,-40,-26,-47,-49,-48,-46,-45,-44,-51,-50,-25,-19,-24,11,11,11,11,-7,-6,11,-20,]),'GREATER':([33,34,41,46,],[-58,-59,64,64,]),'INT':([4,9,29,49,102,],[14,14,14,14,14,]),'CHARS':([4,9,29,49,102,],[15,15,15,15,15,]),'YLOGIC':([33,34,41,46,],[-58,-59,72,72,]),'BOOL':([4,9,29,49,102,],[17,17,17,17,17,]),'RBLOCK':([33,34,35,36,37,38,39,40,41,42,46,53,55,57,65,66,71,74,75,76,78,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,105,106,107,112,114,116,117,124,125,],[-58,-59,-33,-35,-16,-27,-22,-21,-56,-57,-41,-18,-17,-34,-54,-55,-53,-52,-23,-42,-43,-39,-38,-36,-37,-40,-26,-47,-49,-48,-46,-45,-44,-51,-50,-25,-19,-24,113,-13,-24,118,-12,-15,-14,125,-20,]),'GREATERTHAN':([33,34,41,46,],[-58,-59,70,70,]),'MOD':([33,34,35,41,],[-58,-59,61,61,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencias':([0,1,13,],[1,1,1,]),'expresiones':([21,56,58,59,60,61,120,],[32,83,84,85,86,87,121,]),'bloque_sin_tipo':([101,107,123,],[105,114,124,]),'expresiones_mul':([24,110,],[40,116,]),'argv_rec':([29,49,102,],[50,50,108,]),'cond2':([41,46,],[65,76,]),'ids':([22,25,62,],[37,44,88,]),'argv':([29,49,],[51,79,]),'bloque_tipo':([104,111,],[112,117,]),'declaraciones':([0,1,13,77,101,104,107,111,123,],[2,2,2,99,107,111,107,111,107,]),'return_dec':([77,101,107,123,],[98,106,106,106,]),'S':([0,1,13,],[8,12,27,]),'comun':([21,24,26,43,48,54,56,58,59,60,61,63,64,67,68,69,70,72,73,103,110,120,],[35,41,46,74,78,82,35,35,35,35,35,46,46,46,46,46,46,46,46,46,41,35,]),'tipos':([4,9,29,49,102,],[16,22,52,52,52,]),'exp2':([35,41,],[57,66,]),'condiciones':([26,63,64,67,68,69,70,72,73,103,],[47,89,90,91,92,93,94,95,96,109,]),'expMul2':([41,],[71,]),'idsfun':([25,],[45,]),'funciones':([0,1,13,],[3,3,3,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> sentencias S','S',2,'p_rec_sentencias','parse.py',27),
  ('S -> sentencias END_LINE S','S',3,'p_rec_sentencias','parse.py',28),
  ('S -> sentencias','S',1,'p_sentencias','parse.py',37),
  ('sentencias -> funciones','sentencias',1,'p_funciones','parse.py',42),
  ('sentencias -> declaraciones','sentencias',1,'p_declaraciones','parse.py',47),
  ('funciones -> FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK','funciones',9,'p_funcion_tipo','parse.py',56),
  ('funciones -> FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK','funciones',8,'p_funcion_sin_tipo','parse.py',63),
  ('argv -> argv_rec','argv',1,'p_argv','parse.py',70),
  ('argv -> <empty>','argv',0,'p_argv','parse.py',71),
  ('argv_rec -> tipos ID COMA argv_rec','argv_rec',4,'p_argv_rec','parse.py',82),
  ('argv_rec -> tipos ID','argv_rec',2,'p_argv_rec','parse.py',83),
  ('bloque_sin_tipo -> declaraciones bloque_sin_tipo','bloque_sin_tipo',2,'p_bloque_sin_tipo','parse.py',92),
  ('bloque_sin_tipo -> return_dec','bloque_sin_tipo',1,'p_bloque_sin_tipo','parse.py',93),
  ('bloque_tipo -> declaraciones bloque_tipo','bloque_tipo',2,'p_bloque_tipo','parse.py',102),
  ('bloque_tipo -> RETURN expresiones_mul','bloque_tipo',2,'p_bloque_tipo','parse.py',103),
  ('declaraciones -> VAR tipos ids','declaraciones',3,'p_variables','parse.py',116),
  ('declaraciones -> WRITE LPAREN expresiones RPAREN','declaraciones',4,'p_write','parse.py',122),
  ('declaraciones -> PROMPT LPAREN ID RPAREN','declaraciones',4,'p_prompt','parse.py',127),
  ('declaraciones -> IF LPAREN condiciones RPAREN return_dec','declaraciones',5,'p_if','parse.py',132),
  ('declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK','declaraciones',15,'p_for','parse.py',137),
  ('declaraciones -> ID ASSIGN expresiones_mul','declaraciones',3,'p_asignacion','parse.py',142),
  ('declaraciones -> ID AOLOGIC ID','declaraciones',3,'p_ologico','parse.py',147),
  ('declaraciones -> ID LPAREN idsfun RPAREN','declaraciones',4,'p_llamada_funcion','parse.py',152),
  ('return_dec -> declaraciones','return_dec',1,'p_if_declaraciones','parse.py',162),
  ('return_dec -> RETURN','return_dec',1,'p_if_declaraciones','parse.py',163),
  ('ids -> ID COMA ids','ids',3,'p_mul_id','parse.py',172),
  ('ids -> ID','ids',1,'p_mul_id','parse.py',173),
  ('idsfun -> ids','idsfun',1,'p_idsFuncionVacio','parse.py',182),
  ('idsfun -> <empty>','idsfun',0,'p_idsFuncionVacio','parse.py',183),
  ('tipos -> INT','tipos',1,'p_tipos','parse.py',192),
  ('tipos -> CHARS','tipos',1,'p_tipos','parse.py',193),
  ('tipos -> BOOL','tipos',1,'p_tipos','parse.py',194),
  ('expresiones -> comun','expresiones',1,'p_expresiones','parse.py',204),
  ('expresiones -> comun exp2','expresiones',2,'p_expresiones','parse.py',205),
  ('expresiones -> STRINGS','expresiones',1,'p_expresiones_string','parse.py',214),
  ('exp2 -> PLUS expresiones','exp2',2,'p_expresiones2','parse.py',219),
  ('exp2 -> MINUS expresiones','exp2',2,'p_expresiones2','parse.py',220),
  ('exp2 -> TIMES expresiones','exp2',2,'p_expresiones2','parse.py',221),
  ('exp2 -> DIVIDE expresiones','exp2',2,'p_expresiones2','parse.py',222),
  ('exp2 -> MOD expresiones','exp2',2,'p_expresiones2','parse.py',223),
  ('condiciones -> comun','condiciones',1,'p_condiciones','parse.py',237),
  ('condiciones -> comun cond2','condiciones',2,'p_condiciones','parse.py',238),
  ('condiciones -> EXCLA comun','condiciones',2,'p_exclamacion','parse.py',247),
  ('cond2 -> GREATERTHAN condiciones','cond2',2,'p_condiciones2','parse.py',252),
  ('cond2 -> LESSTHAN condiciones','cond2',2,'p_condiciones2','parse.py',253),
  ('cond2 -> EQUALS condiciones','cond2',2,'p_condiciones2','parse.py',254),
  ('cond2 -> NOASSIG condiciones','cond2',2,'p_condiciones2','parse.py',255),
  ('cond2 -> LESS condiciones','cond2',2,'p_condiciones2','parse.py',256),
  ('cond2 -> GREATER condiciones','cond2',2,'p_condiciones2','parse.py',257),
  ('cond2 -> OLOGIC condiciones','cond2',2,'p_condiciones2','parse.py',258),
  ('cond2 -> YLOGIC condiciones','cond2',2,'p_condiciones2','parse.py',259),
  ('expresiones_mul -> EXCLA comun','expresiones_mul',2,'p_expresiones_mul_exp','parse.py',280),
  ('expresiones_mul -> comun expMul2','expresiones_mul',2,'p_expresiones_mul_exp','parse.py',281),
  ('expMul2 -> cond2','expMul2',1,'p_expresiones_mul_con_1','parse.py',290),
  ('expMul2 -> exp2','expMul2',1,'p_expresiones_mul_con_2','parse.py',295),
  ('expMul2 -> <empty>','expMul2',0,'p_expresiones_mul_con_3','parse.py',300),
  ('expresiones_mul -> STRINGS','expresiones_mul',1,'p_condiciones3','parse.py',305),
  ('comun -> NUMBER','comun',1,'p_comun','parse.py',310),
  ('comun -> ID','comun',1,'p_comun_dos','parse.py',315),
]
