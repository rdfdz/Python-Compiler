Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> S
Rule 1     S -> sentencias
Rule 2     S -> sentencias S
Rule 3     S -> sentencias END_LINE S
Rule 4     sentencias -> funciones
Rule 5     sentencias -> declaraciones
Rule 6     funciones -> FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK
Rule 7     funciones -> FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK
Rule 8     argv -> argv_rec
Rule 9     argv -> <empty>
Rule 10    argv_rec -> tipos ID
Rule 11    argv_rec -> tipos ID COMA argv_rec
Rule 12    bloque_sin_tipo -> declaraciones bloque_sin_tipo
Rule 13    bloque_sin_tipo -> return_dec
Rule 14    bloque_tipo -> declaraciones bloque_tipo
Rule 15    bloque_tipo -> RETURN expresiones_mul
Rule 16    declaraciones -> VAR tipos ids
Rule 17    declaraciones -> WRITE LPAREN expresiones RPAREN
Rule 18    declaraciones -> PROMPT LPAREN ID RPAREN
Rule 19    declaraciones -> IF LPAREN condiciones RPAREN return_dec
Rule 20    declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK
Rule 21    declaraciones -> ID ASSIGN expresiones_mul
Rule 22    declaraciones -> ID AOLOGIC ID
Rule 23    declaraciones -> ID LPAREN idsfun RPAREN
Rule 24    return_dec -> declaraciones
Rule 25    return_dec -> RETURN
Rule 26    ids -> ID COMA ids
Rule 27    ids -> ID
Rule 28    idsfun -> ids
Rule 29    idsfun -> <empty>
Rule 30    tipos -> INT
Rule 31    tipos -> CHARS
Rule 32    tipos -> BOOL
Rule 33    expresiones -> comun
Rule 34    expresiones -> comun exp2
Rule 35    expresiones -> STRINGS
Rule 36    exp2 -> PLUS expresiones
Rule 37    exp2 -> MINUS expresiones
Rule 38    exp2 -> TIMES expresiones
Rule 39    exp2 -> DIVIDE expresiones
Rule 40    exp2 -> MOD expresiones
Rule 41    condiciones -> comun
Rule 42    condiciones -> comun cond2
Rule 43    condiciones -> EXCLA comun
Rule 44    cond2 -> GREATERTHAN condiciones
Rule 45    cond2 -> LESSTHAN condiciones
Rule 46    cond2 -> EQUALS condiciones
Rule 47    cond2 -> NOASSIG condiciones
Rule 48    cond2 -> LESS condiciones
Rule 49    cond2 -> GREATER condiciones
Rule 50    cond2 -> OLOGIC condiciones
Rule 51    cond2 -> YLOGIC condiciones
Rule 52    expresiones_mul -> EXCLA comun
Rule 53    expresiones_mul -> comun expMul2
Rule 54    expMul2 -> cond2
Rule 55    expMul2 -> exp2
Rule 56    expMul2 -> <empty>
Rule 57    expresiones_mul -> STRINGS
Rule 58    comun -> NUMBER
Rule 59    comun -> ID

Terminals, with rules where they appear

AOLOGIC              : 22
ASSIGN               : 20 20 21
BOOL                 : 32
CHARS                : 31
COMA                 : 11 26
DIVIDE               : 39
END_LINE             : 3 20 20
EQUALS               : 46
EXCLA                : 43 52
FOR                  : 20
FUNCTION             : 6 7
GREATER              : 49
GREATERTHAN          : 44
ID                   : 6 7 10 11 18 20 20 21 22 22 23 26 27 59
IF                   : 19
INT                  : 30
LBLOCK               : 6 7 20
LESS                 : 48
LESSTHAN             : 45
LPAREN               : 6 7 17 18 19 20 23
MINUS                : 37
MOD                  : 40
NOASSIG              : 47
NUMBER               : 58
OLOGIC               : 50
PLUS                 : 36
PROMPT               : 18
RBLOCK               : 6 7 20
RETURN               : 15 25
RPAREN               : 6 7 17 18 19 20 23
STRINGS              : 35 57
TIMES                : 38
VAR                  : 16
WRITE                : 17
YLOGIC               : 51
error                : 

Nonterminals, with rules where they appear

S                    : 2 3 0
argv                 : 6 7
argv_rec             : 8 11
bloque_sin_tipo      : 7 12 20
bloque_tipo          : 6 14
comun                : 20 33 34 41 42 43 52 53
cond2                : 42 54
condiciones          : 19 20 44 45 46 47 48 49 50 51
declaraciones        : 5 12 14 24
exp2                 : 34 55
expMul2              : 53
expresiones          : 17 20 36 37 38 39 40
expresiones_mul      : 15 21
funciones            : 4
ids                  : 16 26 28
idsfun               : 23
return_dec           : 13 19
sentencias           : 1 2 3
tipos                : 6 10 11 16

Parsing method: LALR

state 0

    (0) S' -> . S
    (1) S -> . sentencias
    (2) S -> . sentencias S
    (3) S -> . sentencias END_LINE S
    (4) sentencias -> . funciones
    (5) sentencias -> . declaraciones
    (6) funciones -> . FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK
    (7) funciones -> . FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (16) declaraciones -> . VAR tipos ids
    (17) declaraciones -> . WRITE LPAREN expresiones RPAREN
    (18) declaraciones -> . PROMPT LPAREN ID RPAREN
    (19) declaraciones -> . IF LPAREN condiciones RPAREN return_dec
    (20) declaraciones -> . FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (21) declaraciones -> . ID ASSIGN expresiones_mul
    (22) declaraciones -> . ID AOLOGIC ID
    (23) declaraciones -> . ID LPAREN idsfun RPAREN

    FUNCTION        shift and go to state 4
    VAR             shift and go to state 9
    WRITE           shift and go to state 7
    PROMPT          shift and go to state 5
    IF              shift and go to state 11
    FOR             shift and go to state 6
    ID              shift and go to state 10

    sentencias                     shift and go to state 1
    declaraciones                  shift and go to state 2
    S                              shift and go to state 8
    funciones                      shift and go to state 3

state 1

    (1) S -> sentencias .
    (2) S -> sentencias . S
    (3) S -> sentencias . END_LINE S
    (1) S -> . sentencias
    (2) S -> . sentencias S
    (3) S -> . sentencias END_LINE S
    (4) sentencias -> . funciones
    (5) sentencias -> . declaraciones
    (6) funciones -> . FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK
    (7) funciones -> . FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (16) declaraciones -> . VAR tipos ids
    (17) declaraciones -> . WRITE LPAREN expresiones RPAREN
    (18) declaraciones -> . PROMPT LPAREN ID RPAREN
    (19) declaraciones -> . IF LPAREN condiciones RPAREN return_dec
    (20) declaraciones -> . FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (21) declaraciones -> . ID ASSIGN expresiones_mul
    (22) declaraciones -> . ID AOLOGIC ID
    (23) declaraciones -> . ID LPAREN idsfun RPAREN

    $end            reduce using rule 1 (S -> sentencias .)
    END_LINE        shift and go to state 13
    FUNCTION        shift and go to state 4
    VAR             shift and go to state 9
    WRITE           shift and go to state 7
    PROMPT          shift and go to state 5
    IF              shift and go to state 11
    FOR             shift and go to state 6
    ID              shift and go to state 10

    sentencias                     shift and go to state 1
    declaraciones                  shift and go to state 2
    S                              shift and go to state 12
    funciones                      shift and go to state 3

state 2

    (5) sentencias -> declaraciones .

    END_LINE        reduce using rule 5 (sentencias -> declaraciones .)
    FUNCTION        reduce using rule 5 (sentencias -> declaraciones .)
    VAR             reduce using rule 5 (sentencias -> declaraciones .)
    WRITE           reduce using rule 5 (sentencias -> declaraciones .)
    PROMPT          reduce using rule 5 (sentencias -> declaraciones .)
    IF              reduce using rule 5 (sentencias -> declaraciones .)
    FOR             reduce using rule 5 (sentencias -> declaraciones .)
    ID              reduce using rule 5 (sentencias -> declaraciones .)
    $end            reduce using rule 5 (sentencias -> declaraciones .)


state 3

    (4) sentencias -> funciones .

    END_LINE        reduce using rule 4 (sentencias -> funciones .)
    FUNCTION        reduce using rule 4 (sentencias -> funciones .)
    VAR             reduce using rule 4 (sentencias -> funciones .)
    WRITE           reduce using rule 4 (sentencias -> funciones .)
    PROMPT          reduce using rule 4 (sentencias -> funciones .)
    IF              reduce using rule 4 (sentencias -> funciones .)
    FOR             reduce using rule 4 (sentencias -> funciones .)
    ID              reduce using rule 4 (sentencias -> funciones .)
    $end            reduce using rule 4 (sentencias -> funciones .)


state 4

    (6) funciones -> FUNCTION . tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK
    (7) funciones -> FUNCTION . ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (30) tipos -> . INT
    (31) tipos -> . CHARS
    (32) tipos -> . BOOL

    ID              shift and go to state 18
    INT             shift and go to state 14
    CHARS           shift and go to state 15
    BOOL            shift and go to state 17

    tipos                          shift and go to state 16

state 5

    (18) declaraciones -> PROMPT . LPAREN ID RPAREN

    LPAREN          shift and go to state 19


state 6

    (20) declaraciones -> FOR . LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK

    LPAREN          shift and go to state 20


state 7

    (17) declaraciones -> WRITE . LPAREN expresiones RPAREN

    LPAREN          shift and go to state 21


state 8

    (0) S' -> S .



state 9

    (16) declaraciones -> VAR . tipos ids
    (30) tipos -> . INT
    (31) tipos -> . CHARS
    (32) tipos -> . BOOL

    INT             shift and go to state 14
    CHARS           shift and go to state 15
    BOOL            shift and go to state 17

    tipos                          shift and go to state 22

state 10

    (21) declaraciones -> ID . ASSIGN expresiones_mul
    (22) declaraciones -> ID . AOLOGIC ID
    (23) declaraciones -> ID . LPAREN idsfun RPAREN

    ASSIGN          shift and go to state 24
    AOLOGIC         shift and go to state 23
    LPAREN          shift and go to state 25


state 11

    (19) declaraciones -> IF . LPAREN condiciones RPAREN return_dec

    LPAREN          shift and go to state 26


state 12

    (2) S -> sentencias S .

    $end            reduce using rule 2 (S -> sentencias S .)


state 13

    (3) S -> sentencias END_LINE . S
    (1) S -> . sentencias
    (2) S -> . sentencias S
    (3) S -> . sentencias END_LINE S
    (4) sentencias -> . funciones
    (5) sentencias -> . declaraciones
    (6) funciones -> . FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK
    (7) funciones -> . FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (16) declaraciones -> . VAR tipos ids
    (17) declaraciones -> . WRITE LPAREN expresiones RPAREN
    (18) declaraciones -> . PROMPT LPAREN ID RPAREN
    (19) declaraciones -> . IF LPAREN condiciones RPAREN return_dec
    (20) declaraciones -> . FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (21) declaraciones -> . ID ASSIGN expresiones_mul
    (22) declaraciones -> . ID AOLOGIC ID
    (23) declaraciones -> . ID LPAREN idsfun RPAREN

    FUNCTION        shift and go to state 4
    VAR             shift and go to state 9
    WRITE           shift and go to state 7
    PROMPT          shift and go to state 5
    IF              shift and go to state 11
    FOR             shift and go to state 6
    ID              shift and go to state 10

    sentencias                     shift and go to state 1
    declaraciones                  shift and go to state 2
    S                              shift and go to state 27
    funciones                      shift and go to state 3

state 14

    (30) tipos -> INT .

    ID              reduce using rule 30 (tipos -> INT .)


state 15

    (31) tipos -> CHARS .

    ID              reduce using rule 31 (tipos -> CHARS .)


state 16

    (6) funciones -> FUNCTION tipos . ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK

    ID              shift and go to state 28


state 17

    (32) tipos -> BOOL .

    ID              reduce using rule 32 (tipos -> BOOL .)


state 18

    (7) funciones -> FUNCTION ID . LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK

    LPAREN          shift and go to state 29


state 19

    (18) declaraciones -> PROMPT LPAREN . ID RPAREN

    ID              shift and go to state 30


state 20

    (20) declaraciones -> FOR LPAREN . ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK

    ID              shift and go to state 31


state 21

    (17) declaraciones -> WRITE LPAREN . expresiones RPAREN
    (33) expresiones -> . comun
    (34) expresiones -> . comun exp2
    (35) expresiones -> . STRINGS
    (58) comun -> . NUMBER
    (59) comun -> . ID

    STRINGS         shift and go to state 36
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    expresiones                    shift and go to state 32
    comun                          shift and go to state 35

state 22

    (16) declaraciones -> VAR tipos . ids
    (26) ids -> . ID COMA ids
    (27) ids -> . ID

    ID              shift and go to state 38

    ids                            shift and go to state 37

state 23

    (22) declaraciones -> ID AOLOGIC . ID

    ID              shift and go to state 39


state 24

    (21) declaraciones -> ID ASSIGN . expresiones_mul
    (52) expresiones_mul -> . EXCLA comun
    (53) expresiones_mul -> . comun expMul2
    (57) expresiones_mul -> . STRINGS
    (58) comun -> . NUMBER
    (59) comun -> . ID

    EXCLA           shift and go to state 43
    STRINGS         shift and go to state 42
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    expresiones_mul                shift and go to state 40
    comun                          shift and go to state 41

state 25

    (23) declaraciones -> ID LPAREN . idsfun RPAREN
    (28) idsfun -> . ids
    (29) idsfun -> .
    (26) ids -> . ID COMA ids
    (27) ids -> . ID

    RPAREN          reduce using rule 29 (idsfun -> .)
    ID              shift and go to state 38

    idsfun                         shift and go to state 45
    ids                            shift and go to state 44

state 26

    (19) declaraciones -> IF LPAREN . condiciones RPAREN return_dec
    (41) condiciones -> . comun
    (42) condiciones -> . comun cond2
    (43) condiciones -> . EXCLA comun
    (58) comun -> . NUMBER
    (59) comun -> . ID

    EXCLA           shift and go to state 48
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    condiciones                    shift and go to state 47
    comun                          shift and go to state 46

state 27

    (3) S -> sentencias END_LINE S .

    $end            reduce using rule 3 (S -> sentencias END_LINE S .)


state 28

    (6) funciones -> FUNCTION tipos ID . LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK

    LPAREN          shift and go to state 49


state 29

    (7) funciones -> FUNCTION ID LPAREN . argv RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (8) argv -> . argv_rec
    (9) argv -> .
    (10) argv_rec -> . tipos ID
    (11) argv_rec -> . tipos ID COMA argv_rec
    (30) tipos -> . INT
    (31) tipos -> . CHARS
    (32) tipos -> . BOOL

    RPAREN          reduce using rule 9 (argv -> .)
    INT             shift and go to state 14
    CHARS           shift and go to state 15
    BOOL            shift and go to state 17

    tipos                          shift and go to state 52
    argv_rec                       shift and go to state 50
    argv                           shift and go to state 51

state 30

    (18) declaraciones -> PROMPT LPAREN ID . RPAREN

    RPAREN          shift and go to state 53


state 31

    (20) declaraciones -> FOR LPAREN ID . ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK

    ASSIGN          shift and go to state 54


state 32

    (17) declaraciones -> WRITE LPAREN expresiones . RPAREN

    RPAREN          shift and go to state 55


state 33

    (58) comun -> NUMBER .

    PLUS            reduce using rule 58 (comun -> NUMBER .)
    MINUS           reduce using rule 58 (comun -> NUMBER .)
    TIMES           reduce using rule 58 (comun -> NUMBER .)
    DIVIDE          reduce using rule 58 (comun -> NUMBER .)
    MOD             reduce using rule 58 (comun -> NUMBER .)
    RPAREN          reduce using rule 58 (comun -> NUMBER .)
    END_LINE        reduce using rule 58 (comun -> NUMBER .)
    FUNCTION        reduce using rule 58 (comun -> NUMBER .)
    VAR             reduce using rule 58 (comun -> NUMBER .)
    WRITE           reduce using rule 58 (comun -> NUMBER .)
    PROMPT          reduce using rule 58 (comun -> NUMBER .)
    IF              reduce using rule 58 (comun -> NUMBER .)
    FOR             reduce using rule 58 (comun -> NUMBER .)
    ID              reduce using rule 58 (comun -> NUMBER .)
    $end            reduce using rule 58 (comun -> NUMBER .)
    RETURN          reduce using rule 58 (comun -> NUMBER .)
    RBLOCK          reduce using rule 58 (comun -> NUMBER .)
    GREATERTHAN     reduce using rule 58 (comun -> NUMBER .)
    LESSTHAN        reduce using rule 58 (comun -> NUMBER .)
    EQUALS          reduce using rule 58 (comun -> NUMBER .)
    NOASSIG         reduce using rule 58 (comun -> NUMBER .)
    LESS            reduce using rule 58 (comun -> NUMBER .)
    GREATER         reduce using rule 58 (comun -> NUMBER .)
    OLOGIC          reduce using rule 58 (comun -> NUMBER .)
    YLOGIC          reduce using rule 58 (comun -> NUMBER .)


state 34

    (59) comun -> ID .

    PLUS            reduce using rule 59 (comun -> ID .)
    MINUS           reduce using rule 59 (comun -> ID .)
    TIMES           reduce using rule 59 (comun -> ID .)
    DIVIDE          reduce using rule 59 (comun -> ID .)
    MOD             reduce using rule 59 (comun -> ID .)
    RPAREN          reduce using rule 59 (comun -> ID .)
    END_LINE        reduce using rule 59 (comun -> ID .)
    FUNCTION        reduce using rule 59 (comun -> ID .)
    VAR             reduce using rule 59 (comun -> ID .)
    WRITE           reduce using rule 59 (comun -> ID .)
    PROMPT          reduce using rule 59 (comun -> ID .)
    IF              reduce using rule 59 (comun -> ID .)
    FOR             reduce using rule 59 (comun -> ID .)
    ID              reduce using rule 59 (comun -> ID .)
    $end            reduce using rule 59 (comun -> ID .)
    RETURN          reduce using rule 59 (comun -> ID .)
    RBLOCK          reduce using rule 59 (comun -> ID .)
    GREATERTHAN     reduce using rule 59 (comun -> ID .)
    LESSTHAN        reduce using rule 59 (comun -> ID .)
    EQUALS          reduce using rule 59 (comun -> ID .)
    NOASSIG         reduce using rule 59 (comun -> ID .)
    LESS            reduce using rule 59 (comun -> ID .)
    GREATER         reduce using rule 59 (comun -> ID .)
    OLOGIC          reduce using rule 59 (comun -> ID .)
    YLOGIC          reduce using rule 59 (comun -> ID .)


state 35

    (33) expresiones -> comun .
    (34) expresiones -> comun . exp2
    (36) exp2 -> . PLUS expresiones
    (37) exp2 -> . MINUS expresiones
    (38) exp2 -> . TIMES expresiones
    (39) exp2 -> . DIVIDE expresiones
    (40) exp2 -> . MOD expresiones

    RPAREN          reduce using rule 33 (expresiones -> comun .)
    END_LINE        reduce using rule 33 (expresiones -> comun .)
    FUNCTION        reduce using rule 33 (expresiones -> comun .)
    VAR             reduce using rule 33 (expresiones -> comun .)
    WRITE           reduce using rule 33 (expresiones -> comun .)
    PROMPT          reduce using rule 33 (expresiones -> comun .)
    IF              reduce using rule 33 (expresiones -> comun .)
    FOR             reduce using rule 33 (expresiones -> comun .)
    ID              reduce using rule 33 (expresiones -> comun .)
    $end            reduce using rule 33 (expresiones -> comun .)
    RETURN          reduce using rule 33 (expresiones -> comun .)
    RBLOCK          reduce using rule 33 (expresiones -> comun .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 56
    MOD             shift and go to state 61

    exp2                           shift and go to state 57

state 36

    (35) expresiones -> STRINGS .

    RPAREN          reduce using rule 35 (expresiones -> STRINGS .)
    END_LINE        reduce using rule 35 (expresiones -> STRINGS .)
    FUNCTION        reduce using rule 35 (expresiones -> STRINGS .)
    VAR             reduce using rule 35 (expresiones -> STRINGS .)
    WRITE           reduce using rule 35 (expresiones -> STRINGS .)
    PROMPT          reduce using rule 35 (expresiones -> STRINGS .)
    IF              reduce using rule 35 (expresiones -> STRINGS .)
    FOR             reduce using rule 35 (expresiones -> STRINGS .)
    ID              reduce using rule 35 (expresiones -> STRINGS .)
    $end            reduce using rule 35 (expresiones -> STRINGS .)
    RETURN          reduce using rule 35 (expresiones -> STRINGS .)
    RBLOCK          reduce using rule 35 (expresiones -> STRINGS .)


state 37

    (16) declaraciones -> VAR tipos ids .

    RETURN          reduce using rule 16 (declaraciones -> VAR tipos ids .)
    VAR             reduce using rule 16 (declaraciones -> VAR tipos ids .)
    WRITE           reduce using rule 16 (declaraciones -> VAR tipos ids .)
    PROMPT          reduce using rule 16 (declaraciones -> VAR tipos ids .)
    IF              reduce using rule 16 (declaraciones -> VAR tipos ids .)
    FOR             reduce using rule 16 (declaraciones -> VAR tipos ids .)
    ID              reduce using rule 16 (declaraciones -> VAR tipos ids .)
    RBLOCK          reduce using rule 16 (declaraciones -> VAR tipos ids .)
    END_LINE        reduce using rule 16 (declaraciones -> VAR tipos ids .)
    FUNCTION        reduce using rule 16 (declaraciones -> VAR tipos ids .)
    $end            reduce using rule 16 (declaraciones -> VAR tipos ids .)


state 38

    (26) ids -> ID . COMA ids
    (27) ids -> ID .

    COMA            shift and go to state 62
    END_LINE        reduce using rule 27 (ids -> ID .)
    FUNCTION        reduce using rule 27 (ids -> ID .)
    VAR             reduce using rule 27 (ids -> ID .)
    WRITE           reduce using rule 27 (ids -> ID .)
    PROMPT          reduce using rule 27 (ids -> ID .)
    IF              reduce using rule 27 (ids -> ID .)
    FOR             reduce using rule 27 (ids -> ID .)
    ID              reduce using rule 27 (ids -> ID .)
    $end            reduce using rule 27 (ids -> ID .)
    RETURN          reduce using rule 27 (ids -> ID .)
    RBLOCK          reduce using rule 27 (ids -> ID .)
    RPAREN          reduce using rule 27 (ids -> ID .)


state 39

    (22) declaraciones -> ID AOLOGIC ID .

    RETURN          reduce using rule 22 (declaraciones -> ID AOLOGIC ID .)
    VAR             reduce using rule 22 (declaraciones -> ID AOLOGIC ID .)
    WRITE           reduce using rule 22 (declaraciones -> ID AOLOGIC ID .)
    PROMPT          reduce using rule 22 (declaraciones -> ID AOLOGIC ID .)
    IF              reduce using rule 22 (declaraciones -> ID AOLOGIC ID .)
    FOR             reduce using rule 22 (declaraciones -> ID AOLOGIC ID .)
    ID              reduce using rule 22 (declaraciones -> ID AOLOGIC ID .)
    RBLOCK          reduce using rule 22 (declaraciones -> ID AOLOGIC ID .)
    END_LINE        reduce using rule 22 (declaraciones -> ID AOLOGIC ID .)
    FUNCTION        reduce using rule 22 (declaraciones -> ID AOLOGIC ID .)
    $end            reduce using rule 22 (declaraciones -> ID AOLOGIC ID .)


state 40

    (21) declaraciones -> ID ASSIGN expresiones_mul .

    RETURN          reduce using rule 21 (declaraciones -> ID ASSIGN expresiones_mul .)
    VAR             reduce using rule 21 (declaraciones -> ID ASSIGN expresiones_mul .)
    WRITE           reduce using rule 21 (declaraciones -> ID ASSIGN expresiones_mul .)
    PROMPT          reduce using rule 21 (declaraciones -> ID ASSIGN expresiones_mul .)
    IF              reduce using rule 21 (declaraciones -> ID ASSIGN expresiones_mul .)
    FOR             reduce using rule 21 (declaraciones -> ID ASSIGN expresiones_mul .)
    ID              reduce using rule 21 (declaraciones -> ID ASSIGN expresiones_mul .)
    RBLOCK          reduce using rule 21 (declaraciones -> ID ASSIGN expresiones_mul .)
    END_LINE        reduce using rule 21 (declaraciones -> ID ASSIGN expresiones_mul .)
    FUNCTION        reduce using rule 21 (declaraciones -> ID ASSIGN expresiones_mul .)
    $end            reduce using rule 21 (declaraciones -> ID ASSIGN expresiones_mul .)


state 41

    (53) expresiones_mul -> comun . expMul2
    (54) expMul2 -> . cond2
    (55) expMul2 -> . exp2
    (56) expMul2 -> .
    (44) cond2 -> . GREATERTHAN condiciones
    (45) cond2 -> . LESSTHAN condiciones
    (46) cond2 -> . EQUALS condiciones
    (47) cond2 -> . NOASSIG condiciones
    (48) cond2 -> . LESS condiciones
    (49) cond2 -> . GREATER condiciones
    (50) cond2 -> . OLOGIC condiciones
    (51) cond2 -> . YLOGIC condiciones
    (36) exp2 -> . PLUS expresiones
    (37) exp2 -> . MINUS expresiones
    (38) exp2 -> . TIMES expresiones
    (39) exp2 -> . DIVIDE expresiones
    (40) exp2 -> . MOD expresiones

    END_LINE        reduce using rule 56 (expMul2 -> .)
    FUNCTION        reduce using rule 56 (expMul2 -> .)
    VAR             reduce using rule 56 (expMul2 -> .)
    WRITE           reduce using rule 56 (expMul2 -> .)
    PROMPT          reduce using rule 56 (expMul2 -> .)
    IF              reduce using rule 56 (expMul2 -> .)
    FOR             reduce using rule 56 (expMul2 -> .)
    ID              reduce using rule 56 (expMul2 -> .)
    $end            reduce using rule 56 (expMul2 -> .)
    RETURN          reduce using rule 56 (expMul2 -> .)
    RBLOCK          reduce using rule 56 (expMul2 -> .)
    GREATERTHAN     shift and go to state 70
    LESSTHAN        shift and go to state 69
    EQUALS          shift and go to state 68
    NOASSIG         shift and go to state 63
    LESS            shift and go to state 67
    GREATER         shift and go to state 64
    OLOGIC          shift and go to state 73
    YLOGIC          shift and go to state 72
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    TIMES           shift and go to state 58
    DIVIDE          shift and go to state 56
    MOD             shift and go to state 61

    cond2                          shift and go to state 65
    exp2                           shift and go to state 66
    expMul2                        shift and go to state 71

state 42

    (57) expresiones_mul -> STRINGS .

    RBLOCK          reduce using rule 57 (expresiones_mul -> STRINGS .)
    END_LINE        reduce using rule 57 (expresiones_mul -> STRINGS .)
    FUNCTION        reduce using rule 57 (expresiones_mul -> STRINGS .)
    VAR             reduce using rule 57 (expresiones_mul -> STRINGS .)
    WRITE           reduce using rule 57 (expresiones_mul -> STRINGS .)
    PROMPT          reduce using rule 57 (expresiones_mul -> STRINGS .)
    IF              reduce using rule 57 (expresiones_mul -> STRINGS .)
    FOR             reduce using rule 57 (expresiones_mul -> STRINGS .)
    ID              reduce using rule 57 (expresiones_mul -> STRINGS .)
    $end            reduce using rule 57 (expresiones_mul -> STRINGS .)
    RETURN          reduce using rule 57 (expresiones_mul -> STRINGS .)


state 43

    (52) expresiones_mul -> EXCLA . comun
    (58) comun -> . NUMBER
    (59) comun -> . ID

    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    comun                          shift and go to state 74

state 44

    (28) idsfun -> ids .

    RPAREN          reduce using rule 28 (idsfun -> ids .)


state 45

    (23) declaraciones -> ID LPAREN idsfun . RPAREN

    RPAREN          shift and go to state 75


state 46

    (41) condiciones -> comun .
    (42) condiciones -> comun . cond2
    (44) cond2 -> . GREATERTHAN condiciones
    (45) cond2 -> . LESSTHAN condiciones
    (46) cond2 -> . EQUALS condiciones
    (47) cond2 -> . NOASSIG condiciones
    (48) cond2 -> . LESS condiciones
    (49) cond2 -> . GREATER condiciones
    (50) cond2 -> . OLOGIC condiciones
    (51) cond2 -> . YLOGIC condiciones

    RPAREN          reduce using rule 41 (condiciones -> comun .)
    END_LINE        reduce using rule 41 (condiciones -> comun .)
    FUNCTION        reduce using rule 41 (condiciones -> comun .)
    VAR             reduce using rule 41 (condiciones -> comun .)
    WRITE           reduce using rule 41 (condiciones -> comun .)
    PROMPT          reduce using rule 41 (condiciones -> comun .)
    IF              reduce using rule 41 (condiciones -> comun .)
    FOR             reduce using rule 41 (condiciones -> comun .)
    ID              reduce using rule 41 (condiciones -> comun .)
    $end            reduce using rule 41 (condiciones -> comun .)
    RETURN          reduce using rule 41 (condiciones -> comun .)
    RBLOCK          reduce using rule 41 (condiciones -> comun .)
    GREATERTHAN     shift and go to state 70
    LESSTHAN        shift and go to state 69
    EQUALS          shift and go to state 68
    NOASSIG         shift and go to state 63
    LESS            shift and go to state 67
    GREATER         shift and go to state 64
    OLOGIC          shift and go to state 73
    YLOGIC          shift and go to state 72

    cond2                          shift and go to state 76

state 47

    (19) declaraciones -> IF LPAREN condiciones . RPAREN return_dec

    RPAREN          shift and go to state 77


state 48

    (43) condiciones -> EXCLA . comun
    (58) comun -> . NUMBER
    (59) comun -> . ID

    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    comun                          shift and go to state 78

state 49

    (6) funciones -> FUNCTION tipos ID LPAREN . argv RPAREN LBLOCK bloque_tipo RBLOCK
    (8) argv -> . argv_rec
    (9) argv -> .
    (10) argv_rec -> . tipos ID
    (11) argv_rec -> . tipos ID COMA argv_rec
    (30) tipos -> . INT
    (31) tipos -> . CHARS
    (32) tipos -> . BOOL

    RPAREN          reduce using rule 9 (argv -> .)
    INT             shift and go to state 14
    CHARS           shift and go to state 15
    BOOL            shift and go to state 17

    tipos                          shift and go to state 52
    argv_rec                       shift and go to state 50
    argv                           shift and go to state 79

state 50

    (8) argv -> argv_rec .

    RPAREN          reduce using rule 8 (argv -> argv_rec .)


state 51

    (7) funciones -> FUNCTION ID LPAREN argv . RPAREN LBLOCK bloque_sin_tipo RBLOCK

    RPAREN          shift and go to state 80


state 52

    (10) argv_rec -> tipos . ID
    (11) argv_rec -> tipos . ID COMA argv_rec

    ID              shift and go to state 81


state 53

    (18) declaraciones -> PROMPT LPAREN ID RPAREN .

    RETURN          reduce using rule 18 (declaraciones -> PROMPT LPAREN ID RPAREN .)
    VAR             reduce using rule 18 (declaraciones -> PROMPT LPAREN ID RPAREN .)
    WRITE           reduce using rule 18 (declaraciones -> PROMPT LPAREN ID RPAREN .)
    PROMPT          reduce using rule 18 (declaraciones -> PROMPT LPAREN ID RPAREN .)
    IF              reduce using rule 18 (declaraciones -> PROMPT LPAREN ID RPAREN .)
    FOR             reduce using rule 18 (declaraciones -> PROMPT LPAREN ID RPAREN .)
    ID              reduce using rule 18 (declaraciones -> PROMPT LPAREN ID RPAREN .)
    RBLOCK          reduce using rule 18 (declaraciones -> PROMPT LPAREN ID RPAREN .)
    END_LINE        reduce using rule 18 (declaraciones -> PROMPT LPAREN ID RPAREN .)
    FUNCTION        reduce using rule 18 (declaraciones -> PROMPT LPAREN ID RPAREN .)
    $end            reduce using rule 18 (declaraciones -> PROMPT LPAREN ID RPAREN .)


state 54

    (20) declaraciones -> FOR LPAREN ID ASSIGN . comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (58) comun -> . NUMBER
    (59) comun -> . ID

    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    comun                          shift and go to state 82

state 55

    (17) declaraciones -> WRITE LPAREN expresiones RPAREN .

    RETURN          reduce using rule 17 (declaraciones -> WRITE LPAREN expresiones RPAREN .)
    VAR             reduce using rule 17 (declaraciones -> WRITE LPAREN expresiones RPAREN .)
    WRITE           reduce using rule 17 (declaraciones -> WRITE LPAREN expresiones RPAREN .)
    PROMPT          reduce using rule 17 (declaraciones -> WRITE LPAREN expresiones RPAREN .)
    IF              reduce using rule 17 (declaraciones -> WRITE LPAREN expresiones RPAREN .)
    FOR             reduce using rule 17 (declaraciones -> WRITE LPAREN expresiones RPAREN .)
    ID              reduce using rule 17 (declaraciones -> WRITE LPAREN expresiones RPAREN .)
    RBLOCK          reduce using rule 17 (declaraciones -> WRITE LPAREN expresiones RPAREN .)
    END_LINE        reduce using rule 17 (declaraciones -> WRITE LPAREN expresiones RPAREN .)
    FUNCTION        reduce using rule 17 (declaraciones -> WRITE LPAREN expresiones RPAREN .)
    $end            reduce using rule 17 (declaraciones -> WRITE LPAREN expresiones RPAREN .)


state 56

    (39) exp2 -> DIVIDE . expresiones
    (33) expresiones -> . comun
    (34) expresiones -> . comun exp2
    (35) expresiones -> . STRINGS
    (58) comun -> . NUMBER
    (59) comun -> . ID

    STRINGS         shift and go to state 36
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    expresiones                    shift and go to state 83
    comun                          shift and go to state 35

state 57

    (34) expresiones -> comun exp2 .

    RPAREN          reduce using rule 34 (expresiones -> comun exp2 .)
    END_LINE        reduce using rule 34 (expresiones -> comun exp2 .)
    FUNCTION        reduce using rule 34 (expresiones -> comun exp2 .)
    VAR             reduce using rule 34 (expresiones -> comun exp2 .)
    WRITE           reduce using rule 34 (expresiones -> comun exp2 .)
    PROMPT          reduce using rule 34 (expresiones -> comun exp2 .)
    IF              reduce using rule 34 (expresiones -> comun exp2 .)
    FOR             reduce using rule 34 (expresiones -> comun exp2 .)
    ID              reduce using rule 34 (expresiones -> comun exp2 .)
    $end            reduce using rule 34 (expresiones -> comun exp2 .)
    RETURN          reduce using rule 34 (expresiones -> comun exp2 .)
    RBLOCK          reduce using rule 34 (expresiones -> comun exp2 .)


state 58

    (38) exp2 -> TIMES . expresiones
    (33) expresiones -> . comun
    (34) expresiones -> . comun exp2
    (35) expresiones -> . STRINGS
    (58) comun -> . NUMBER
    (59) comun -> . ID

    STRINGS         shift and go to state 36
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    expresiones                    shift and go to state 84
    comun                          shift and go to state 35

state 59

    (36) exp2 -> PLUS . expresiones
    (33) expresiones -> . comun
    (34) expresiones -> . comun exp2
    (35) expresiones -> . STRINGS
    (58) comun -> . NUMBER
    (59) comun -> . ID

    STRINGS         shift and go to state 36
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    expresiones                    shift and go to state 85
    comun                          shift and go to state 35

state 60

    (37) exp2 -> MINUS . expresiones
    (33) expresiones -> . comun
    (34) expresiones -> . comun exp2
    (35) expresiones -> . STRINGS
    (58) comun -> . NUMBER
    (59) comun -> . ID

    STRINGS         shift and go to state 36
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    expresiones                    shift and go to state 86
    comun                          shift and go to state 35

state 61

    (40) exp2 -> MOD . expresiones
    (33) expresiones -> . comun
    (34) expresiones -> . comun exp2
    (35) expresiones -> . STRINGS
    (58) comun -> . NUMBER
    (59) comun -> . ID

    STRINGS         shift and go to state 36
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    expresiones                    shift and go to state 87
    comun                          shift and go to state 35

state 62

    (26) ids -> ID COMA . ids
    (26) ids -> . ID COMA ids
    (27) ids -> . ID

    ID              shift and go to state 38

    ids                            shift and go to state 88

state 63

    (47) cond2 -> NOASSIG . condiciones
    (41) condiciones -> . comun
    (42) condiciones -> . comun cond2
    (43) condiciones -> . EXCLA comun
    (58) comun -> . NUMBER
    (59) comun -> . ID

    EXCLA           shift and go to state 48
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    condiciones                    shift and go to state 89
    comun                          shift and go to state 46

state 64

    (49) cond2 -> GREATER . condiciones
    (41) condiciones -> . comun
    (42) condiciones -> . comun cond2
    (43) condiciones -> . EXCLA comun
    (58) comun -> . NUMBER
    (59) comun -> . ID

    EXCLA           shift and go to state 48
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    condiciones                    shift and go to state 90
    comun                          shift and go to state 46

state 65

    (54) expMul2 -> cond2 .

    END_LINE        reduce using rule 54 (expMul2 -> cond2 .)
    FUNCTION        reduce using rule 54 (expMul2 -> cond2 .)
    VAR             reduce using rule 54 (expMul2 -> cond2 .)
    WRITE           reduce using rule 54 (expMul2 -> cond2 .)
    PROMPT          reduce using rule 54 (expMul2 -> cond2 .)
    IF              reduce using rule 54 (expMul2 -> cond2 .)
    FOR             reduce using rule 54 (expMul2 -> cond2 .)
    ID              reduce using rule 54 (expMul2 -> cond2 .)
    $end            reduce using rule 54 (expMul2 -> cond2 .)
    RETURN          reduce using rule 54 (expMul2 -> cond2 .)
    RBLOCK          reduce using rule 54 (expMul2 -> cond2 .)


state 66

    (55) expMul2 -> exp2 .

    END_LINE        reduce using rule 55 (expMul2 -> exp2 .)
    FUNCTION        reduce using rule 55 (expMul2 -> exp2 .)
    VAR             reduce using rule 55 (expMul2 -> exp2 .)
    WRITE           reduce using rule 55 (expMul2 -> exp2 .)
    PROMPT          reduce using rule 55 (expMul2 -> exp2 .)
    IF              reduce using rule 55 (expMul2 -> exp2 .)
    FOR             reduce using rule 55 (expMul2 -> exp2 .)
    ID              reduce using rule 55 (expMul2 -> exp2 .)
    $end            reduce using rule 55 (expMul2 -> exp2 .)
    RETURN          reduce using rule 55 (expMul2 -> exp2 .)
    RBLOCK          reduce using rule 55 (expMul2 -> exp2 .)


state 67

    (48) cond2 -> LESS . condiciones
    (41) condiciones -> . comun
    (42) condiciones -> . comun cond2
    (43) condiciones -> . EXCLA comun
    (58) comun -> . NUMBER
    (59) comun -> . ID

    EXCLA           shift and go to state 48
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    condiciones                    shift and go to state 91
    comun                          shift and go to state 46

state 68

    (46) cond2 -> EQUALS . condiciones
    (41) condiciones -> . comun
    (42) condiciones -> . comun cond2
    (43) condiciones -> . EXCLA comun
    (58) comun -> . NUMBER
    (59) comun -> . ID

    EXCLA           shift and go to state 48
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    condiciones                    shift and go to state 92
    comun                          shift and go to state 46

state 69

    (45) cond2 -> LESSTHAN . condiciones
    (41) condiciones -> . comun
    (42) condiciones -> . comun cond2
    (43) condiciones -> . EXCLA comun
    (58) comun -> . NUMBER
    (59) comun -> . ID

    EXCLA           shift and go to state 48
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    condiciones                    shift and go to state 93
    comun                          shift and go to state 46

state 70

    (44) cond2 -> GREATERTHAN . condiciones
    (41) condiciones -> . comun
    (42) condiciones -> . comun cond2
    (43) condiciones -> . EXCLA comun
    (58) comun -> . NUMBER
    (59) comun -> . ID

    EXCLA           shift and go to state 48
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    condiciones                    shift and go to state 94
    comun                          shift and go to state 46

state 71

    (53) expresiones_mul -> comun expMul2 .

    RBLOCK          reduce using rule 53 (expresiones_mul -> comun expMul2 .)
    END_LINE        reduce using rule 53 (expresiones_mul -> comun expMul2 .)
    FUNCTION        reduce using rule 53 (expresiones_mul -> comun expMul2 .)
    VAR             reduce using rule 53 (expresiones_mul -> comun expMul2 .)
    WRITE           reduce using rule 53 (expresiones_mul -> comun expMul2 .)
    PROMPT          reduce using rule 53 (expresiones_mul -> comun expMul2 .)
    IF              reduce using rule 53 (expresiones_mul -> comun expMul2 .)
    FOR             reduce using rule 53 (expresiones_mul -> comun expMul2 .)
    ID              reduce using rule 53 (expresiones_mul -> comun expMul2 .)
    $end            reduce using rule 53 (expresiones_mul -> comun expMul2 .)
    RETURN          reduce using rule 53 (expresiones_mul -> comun expMul2 .)


state 72

    (51) cond2 -> YLOGIC . condiciones
    (41) condiciones -> . comun
    (42) condiciones -> . comun cond2
    (43) condiciones -> . EXCLA comun
    (58) comun -> . NUMBER
    (59) comun -> . ID

    EXCLA           shift and go to state 48
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    condiciones                    shift and go to state 95
    comun                          shift and go to state 46

state 73

    (50) cond2 -> OLOGIC . condiciones
    (41) condiciones -> . comun
    (42) condiciones -> . comun cond2
    (43) condiciones -> . EXCLA comun
    (58) comun -> . NUMBER
    (59) comun -> . ID

    EXCLA           shift and go to state 48
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    condiciones                    shift and go to state 96
    comun                          shift and go to state 46

state 74

    (52) expresiones_mul -> EXCLA comun .

    RBLOCK          reduce using rule 52 (expresiones_mul -> EXCLA comun .)
    END_LINE        reduce using rule 52 (expresiones_mul -> EXCLA comun .)
    FUNCTION        reduce using rule 52 (expresiones_mul -> EXCLA comun .)
    VAR             reduce using rule 52 (expresiones_mul -> EXCLA comun .)
    WRITE           reduce using rule 52 (expresiones_mul -> EXCLA comun .)
    PROMPT          reduce using rule 52 (expresiones_mul -> EXCLA comun .)
    IF              reduce using rule 52 (expresiones_mul -> EXCLA comun .)
    FOR             reduce using rule 52 (expresiones_mul -> EXCLA comun .)
    ID              reduce using rule 52 (expresiones_mul -> EXCLA comun .)
    $end            reduce using rule 52 (expresiones_mul -> EXCLA comun .)
    RETURN          reduce using rule 52 (expresiones_mul -> EXCLA comun .)


state 75

    (23) declaraciones -> ID LPAREN idsfun RPAREN .

    RETURN          reduce using rule 23 (declaraciones -> ID LPAREN idsfun RPAREN .)
    VAR             reduce using rule 23 (declaraciones -> ID LPAREN idsfun RPAREN .)
    WRITE           reduce using rule 23 (declaraciones -> ID LPAREN idsfun RPAREN .)
    PROMPT          reduce using rule 23 (declaraciones -> ID LPAREN idsfun RPAREN .)
    IF              reduce using rule 23 (declaraciones -> ID LPAREN idsfun RPAREN .)
    FOR             reduce using rule 23 (declaraciones -> ID LPAREN idsfun RPAREN .)
    ID              reduce using rule 23 (declaraciones -> ID LPAREN idsfun RPAREN .)
    RBLOCK          reduce using rule 23 (declaraciones -> ID LPAREN idsfun RPAREN .)
    END_LINE        reduce using rule 23 (declaraciones -> ID LPAREN idsfun RPAREN .)
    FUNCTION        reduce using rule 23 (declaraciones -> ID LPAREN idsfun RPAREN .)
    $end            reduce using rule 23 (declaraciones -> ID LPAREN idsfun RPAREN .)


state 76

    (42) condiciones -> comun cond2 .

    RPAREN          reduce using rule 42 (condiciones -> comun cond2 .)
    END_LINE        reduce using rule 42 (condiciones -> comun cond2 .)
    FUNCTION        reduce using rule 42 (condiciones -> comun cond2 .)
    VAR             reduce using rule 42 (condiciones -> comun cond2 .)
    WRITE           reduce using rule 42 (condiciones -> comun cond2 .)
    PROMPT          reduce using rule 42 (condiciones -> comun cond2 .)
    IF              reduce using rule 42 (condiciones -> comun cond2 .)
    FOR             reduce using rule 42 (condiciones -> comun cond2 .)
    ID              reduce using rule 42 (condiciones -> comun cond2 .)
    $end            reduce using rule 42 (condiciones -> comun cond2 .)
    RETURN          reduce using rule 42 (condiciones -> comun cond2 .)
    RBLOCK          reduce using rule 42 (condiciones -> comun cond2 .)


state 77

    (19) declaraciones -> IF LPAREN condiciones RPAREN . return_dec
    (24) return_dec -> . declaraciones
    (25) return_dec -> . RETURN
    (16) declaraciones -> . VAR tipos ids
    (17) declaraciones -> . WRITE LPAREN expresiones RPAREN
    (18) declaraciones -> . PROMPT LPAREN ID RPAREN
    (19) declaraciones -> . IF LPAREN condiciones RPAREN return_dec
    (20) declaraciones -> . FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (21) declaraciones -> . ID ASSIGN expresiones_mul
    (22) declaraciones -> . ID AOLOGIC ID
    (23) declaraciones -> . ID LPAREN idsfun RPAREN

    RETURN          shift and go to state 97
    VAR             shift and go to state 9
    WRITE           shift and go to state 7
    PROMPT          shift and go to state 5
    IF              shift and go to state 11
    FOR             shift and go to state 6
    ID              shift and go to state 10

    declaraciones                  shift and go to state 99
    return_dec                     shift and go to state 98

state 78

    (43) condiciones -> EXCLA comun .

    RPAREN          reduce using rule 43 (condiciones -> EXCLA comun .)
    END_LINE        reduce using rule 43 (condiciones -> EXCLA comun .)
    FUNCTION        reduce using rule 43 (condiciones -> EXCLA comun .)
    VAR             reduce using rule 43 (condiciones -> EXCLA comun .)
    WRITE           reduce using rule 43 (condiciones -> EXCLA comun .)
    PROMPT          reduce using rule 43 (condiciones -> EXCLA comun .)
    IF              reduce using rule 43 (condiciones -> EXCLA comun .)
    FOR             reduce using rule 43 (condiciones -> EXCLA comun .)
    ID              reduce using rule 43 (condiciones -> EXCLA comun .)
    $end            reduce using rule 43 (condiciones -> EXCLA comun .)
    RETURN          reduce using rule 43 (condiciones -> EXCLA comun .)
    RBLOCK          reduce using rule 43 (condiciones -> EXCLA comun .)


state 79

    (6) funciones -> FUNCTION tipos ID LPAREN argv . RPAREN LBLOCK bloque_tipo RBLOCK

    RPAREN          shift and go to state 100


state 80

    (7) funciones -> FUNCTION ID LPAREN argv RPAREN . LBLOCK bloque_sin_tipo RBLOCK

    LBLOCK          shift and go to state 101


state 81

    (10) argv_rec -> tipos ID .
    (11) argv_rec -> tipos ID . COMA argv_rec

    RPAREN          reduce using rule 10 (argv_rec -> tipos ID .)
    COMA            shift and go to state 102


state 82

    (20) declaraciones -> FOR LPAREN ID ASSIGN comun . END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK

    END_LINE        shift and go to state 103


state 83

    (39) exp2 -> DIVIDE expresiones .

    RPAREN          reduce using rule 39 (exp2 -> DIVIDE expresiones .)
    END_LINE        reduce using rule 39 (exp2 -> DIVIDE expresiones .)
    FUNCTION        reduce using rule 39 (exp2 -> DIVIDE expresiones .)
    VAR             reduce using rule 39 (exp2 -> DIVIDE expresiones .)
    WRITE           reduce using rule 39 (exp2 -> DIVIDE expresiones .)
    PROMPT          reduce using rule 39 (exp2 -> DIVIDE expresiones .)
    IF              reduce using rule 39 (exp2 -> DIVIDE expresiones .)
    FOR             reduce using rule 39 (exp2 -> DIVIDE expresiones .)
    ID              reduce using rule 39 (exp2 -> DIVIDE expresiones .)
    $end            reduce using rule 39 (exp2 -> DIVIDE expresiones .)
    RETURN          reduce using rule 39 (exp2 -> DIVIDE expresiones .)
    RBLOCK          reduce using rule 39 (exp2 -> DIVIDE expresiones .)


state 84

    (38) exp2 -> TIMES expresiones .

    RPAREN          reduce using rule 38 (exp2 -> TIMES expresiones .)
    END_LINE        reduce using rule 38 (exp2 -> TIMES expresiones .)
    FUNCTION        reduce using rule 38 (exp2 -> TIMES expresiones .)
    VAR             reduce using rule 38 (exp2 -> TIMES expresiones .)
    WRITE           reduce using rule 38 (exp2 -> TIMES expresiones .)
    PROMPT          reduce using rule 38 (exp2 -> TIMES expresiones .)
    IF              reduce using rule 38 (exp2 -> TIMES expresiones .)
    FOR             reduce using rule 38 (exp2 -> TIMES expresiones .)
    ID              reduce using rule 38 (exp2 -> TIMES expresiones .)
    $end            reduce using rule 38 (exp2 -> TIMES expresiones .)
    RETURN          reduce using rule 38 (exp2 -> TIMES expresiones .)
    RBLOCK          reduce using rule 38 (exp2 -> TIMES expresiones .)


state 85

    (36) exp2 -> PLUS expresiones .

    RPAREN          reduce using rule 36 (exp2 -> PLUS expresiones .)
    END_LINE        reduce using rule 36 (exp2 -> PLUS expresiones .)
    FUNCTION        reduce using rule 36 (exp2 -> PLUS expresiones .)
    VAR             reduce using rule 36 (exp2 -> PLUS expresiones .)
    WRITE           reduce using rule 36 (exp2 -> PLUS expresiones .)
    PROMPT          reduce using rule 36 (exp2 -> PLUS expresiones .)
    IF              reduce using rule 36 (exp2 -> PLUS expresiones .)
    FOR             reduce using rule 36 (exp2 -> PLUS expresiones .)
    ID              reduce using rule 36 (exp2 -> PLUS expresiones .)
    $end            reduce using rule 36 (exp2 -> PLUS expresiones .)
    RETURN          reduce using rule 36 (exp2 -> PLUS expresiones .)
    RBLOCK          reduce using rule 36 (exp2 -> PLUS expresiones .)


state 86

    (37) exp2 -> MINUS expresiones .

    RPAREN          reduce using rule 37 (exp2 -> MINUS expresiones .)
    END_LINE        reduce using rule 37 (exp2 -> MINUS expresiones .)
    FUNCTION        reduce using rule 37 (exp2 -> MINUS expresiones .)
    VAR             reduce using rule 37 (exp2 -> MINUS expresiones .)
    WRITE           reduce using rule 37 (exp2 -> MINUS expresiones .)
    PROMPT          reduce using rule 37 (exp2 -> MINUS expresiones .)
    IF              reduce using rule 37 (exp2 -> MINUS expresiones .)
    FOR             reduce using rule 37 (exp2 -> MINUS expresiones .)
    ID              reduce using rule 37 (exp2 -> MINUS expresiones .)
    $end            reduce using rule 37 (exp2 -> MINUS expresiones .)
    RETURN          reduce using rule 37 (exp2 -> MINUS expresiones .)
    RBLOCK          reduce using rule 37 (exp2 -> MINUS expresiones .)


state 87

    (40) exp2 -> MOD expresiones .

    RPAREN          reduce using rule 40 (exp2 -> MOD expresiones .)
    END_LINE        reduce using rule 40 (exp2 -> MOD expresiones .)
    FUNCTION        reduce using rule 40 (exp2 -> MOD expresiones .)
    VAR             reduce using rule 40 (exp2 -> MOD expresiones .)
    WRITE           reduce using rule 40 (exp2 -> MOD expresiones .)
    PROMPT          reduce using rule 40 (exp2 -> MOD expresiones .)
    IF              reduce using rule 40 (exp2 -> MOD expresiones .)
    FOR             reduce using rule 40 (exp2 -> MOD expresiones .)
    ID              reduce using rule 40 (exp2 -> MOD expresiones .)
    $end            reduce using rule 40 (exp2 -> MOD expresiones .)
    RETURN          reduce using rule 40 (exp2 -> MOD expresiones .)
    RBLOCK          reduce using rule 40 (exp2 -> MOD expresiones .)


state 88

    (26) ids -> ID COMA ids .

    END_LINE        reduce using rule 26 (ids -> ID COMA ids .)
    FUNCTION        reduce using rule 26 (ids -> ID COMA ids .)
    VAR             reduce using rule 26 (ids -> ID COMA ids .)
    WRITE           reduce using rule 26 (ids -> ID COMA ids .)
    PROMPT          reduce using rule 26 (ids -> ID COMA ids .)
    IF              reduce using rule 26 (ids -> ID COMA ids .)
    FOR             reduce using rule 26 (ids -> ID COMA ids .)
    ID              reduce using rule 26 (ids -> ID COMA ids .)
    $end            reduce using rule 26 (ids -> ID COMA ids .)
    RETURN          reduce using rule 26 (ids -> ID COMA ids .)
    RBLOCK          reduce using rule 26 (ids -> ID COMA ids .)
    RPAREN          reduce using rule 26 (ids -> ID COMA ids .)


state 89

    (47) cond2 -> NOASSIG condiciones .

    RPAREN          reduce using rule 47 (cond2 -> NOASSIG condiciones .)
    END_LINE        reduce using rule 47 (cond2 -> NOASSIG condiciones .)
    FUNCTION        reduce using rule 47 (cond2 -> NOASSIG condiciones .)
    VAR             reduce using rule 47 (cond2 -> NOASSIG condiciones .)
    WRITE           reduce using rule 47 (cond2 -> NOASSIG condiciones .)
    PROMPT          reduce using rule 47 (cond2 -> NOASSIG condiciones .)
    IF              reduce using rule 47 (cond2 -> NOASSIG condiciones .)
    FOR             reduce using rule 47 (cond2 -> NOASSIG condiciones .)
    ID              reduce using rule 47 (cond2 -> NOASSIG condiciones .)
    $end            reduce using rule 47 (cond2 -> NOASSIG condiciones .)
    RETURN          reduce using rule 47 (cond2 -> NOASSIG condiciones .)
    RBLOCK          reduce using rule 47 (cond2 -> NOASSIG condiciones .)


state 90

    (49) cond2 -> GREATER condiciones .

    RPAREN          reduce using rule 49 (cond2 -> GREATER condiciones .)
    END_LINE        reduce using rule 49 (cond2 -> GREATER condiciones .)
    FUNCTION        reduce using rule 49 (cond2 -> GREATER condiciones .)
    VAR             reduce using rule 49 (cond2 -> GREATER condiciones .)
    WRITE           reduce using rule 49 (cond2 -> GREATER condiciones .)
    PROMPT          reduce using rule 49 (cond2 -> GREATER condiciones .)
    IF              reduce using rule 49 (cond2 -> GREATER condiciones .)
    FOR             reduce using rule 49 (cond2 -> GREATER condiciones .)
    ID              reduce using rule 49 (cond2 -> GREATER condiciones .)
    $end            reduce using rule 49 (cond2 -> GREATER condiciones .)
    RETURN          reduce using rule 49 (cond2 -> GREATER condiciones .)
    RBLOCK          reduce using rule 49 (cond2 -> GREATER condiciones .)


state 91

    (48) cond2 -> LESS condiciones .

    RPAREN          reduce using rule 48 (cond2 -> LESS condiciones .)
    END_LINE        reduce using rule 48 (cond2 -> LESS condiciones .)
    FUNCTION        reduce using rule 48 (cond2 -> LESS condiciones .)
    VAR             reduce using rule 48 (cond2 -> LESS condiciones .)
    WRITE           reduce using rule 48 (cond2 -> LESS condiciones .)
    PROMPT          reduce using rule 48 (cond2 -> LESS condiciones .)
    IF              reduce using rule 48 (cond2 -> LESS condiciones .)
    FOR             reduce using rule 48 (cond2 -> LESS condiciones .)
    ID              reduce using rule 48 (cond2 -> LESS condiciones .)
    $end            reduce using rule 48 (cond2 -> LESS condiciones .)
    RETURN          reduce using rule 48 (cond2 -> LESS condiciones .)
    RBLOCK          reduce using rule 48 (cond2 -> LESS condiciones .)


state 92

    (46) cond2 -> EQUALS condiciones .

    RPAREN          reduce using rule 46 (cond2 -> EQUALS condiciones .)
    END_LINE        reduce using rule 46 (cond2 -> EQUALS condiciones .)
    FUNCTION        reduce using rule 46 (cond2 -> EQUALS condiciones .)
    VAR             reduce using rule 46 (cond2 -> EQUALS condiciones .)
    WRITE           reduce using rule 46 (cond2 -> EQUALS condiciones .)
    PROMPT          reduce using rule 46 (cond2 -> EQUALS condiciones .)
    IF              reduce using rule 46 (cond2 -> EQUALS condiciones .)
    FOR             reduce using rule 46 (cond2 -> EQUALS condiciones .)
    ID              reduce using rule 46 (cond2 -> EQUALS condiciones .)
    $end            reduce using rule 46 (cond2 -> EQUALS condiciones .)
    RETURN          reduce using rule 46 (cond2 -> EQUALS condiciones .)
    RBLOCK          reduce using rule 46 (cond2 -> EQUALS condiciones .)


state 93

    (45) cond2 -> LESSTHAN condiciones .

    RPAREN          reduce using rule 45 (cond2 -> LESSTHAN condiciones .)
    END_LINE        reduce using rule 45 (cond2 -> LESSTHAN condiciones .)
    FUNCTION        reduce using rule 45 (cond2 -> LESSTHAN condiciones .)
    VAR             reduce using rule 45 (cond2 -> LESSTHAN condiciones .)
    WRITE           reduce using rule 45 (cond2 -> LESSTHAN condiciones .)
    PROMPT          reduce using rule 45 (cond2 -> LESSTHAN condiciones .)
    IF              reduce using rule 45 (cond2 -> LESSTHAN condiciones .)
    FOR             reduce using rule 45 (cond2 -> LESSTHAN condiciones .)
    ID              reduce using rule 45 (cond2 -> LESSTHAN condiciones .)
    $end            reduce using rule 45 (cond2 -> LESSTHAN condiciones .)
    RETURN          reduce using rule 45 (cond2 -> LESSTHAN condiciones .)
    RBLOCK          reduce using rule 45 (cond2 -> LESSTHAN condiciones .)


state 94

    (44) cond2 -> GREATERTHAN condiciones .

    RPAREN          reduce using rule 44 (cond2 -> GREATERTHAN condiciones .)
    END_LINE        reduce using rule 44 (cond2 -> GREATERTHAN condiciones .)
    FUNCTION        reduce using rule 44 (cond2 -> GREATERTHAN condiciones .)
    VAR             reduce using rule 44 (cond2 -> GREATERTHAN condiciones .)
    WRITE           reduce using rule 44 (cond2 -> GREATERTHAN condiciones .)
    PROMPT          reduce using rule 44 (cond2 -> GREATERTHAN condiciones .)
    IF              reduce using rule 44 (cond2 -> GREATERTHAN condiciones .)
    FOR             reduce using rule 44 (cond2 -> GREATERTHAN condiciones .)
    ID              reduce using rule 44 (cond2 -> GREATERTHAN condiciones .)
    $end            reduce using rule 44 (cond2 -> GREATERTHAN condiciones .)
    RETURN          reduce using rule 44 (cond2 -> GREATERTHAN condiciones .)
    RBLOCK          reduce using rule 44 (cond2 -> GREATERTHAN condiciones .)


state 95

    (51) cond2 -> YLOGIC condiciones .

    RPAREN          reduce using rule 51 (cond2 -> YLOGIC condiciones .)
    END_LINE        reduce using rule 51 (cond2 -> YLOGIC condiciones .)
    FUNCTION        reduce using rule 51 (cond2 -> YLOGIC condiciones .)
    VAR             reduce using rule 51 (cond2 -> YLOGIC condiciones .)
    WRITE           reduce using rule 51 (cond2 -> YLOGIC condiciones .)
    PROMPT          reduce using rule 51 (cond2 -> YLOGIC condiciones .)
    IF              reduce using rule 51 (cond2 -> YLOGIC condiciones .)
    FOR             reduce using rule 51 (cond2 -> YLOGIC condiciones .)
    ID              reduce using rule 51 (cond2 -> YLOGIC condiciones .)
    $end            reduce using rule 51 (cond2 -> YLOGIC condiciones .)
    RETURN          reduce using rule 51 (cond2 -> YLOGIC condiciones .)
    RBLOCK          reduce using rule 51 (cond2 -> YLOGIC condiciones .)


state 96

    (50) cond2 -> OLOGIC condiciones .

    RPAREN          reduce using rule 50 (cond2 -> OLOGIC condiciones .)
    END_LINE        reduce using rule 50 (cond2 -> OLOGIC condiciones .)
    FUNCTION        reduce using rule 50 (cond2 -> OLOGIC condiciones .)
    VAR             reduce using rule 50 (cond2 -> OLOGIC condiciones .)
    WRITE           reduce using rule 50 (cond2 -> OLOGIC condiciones .)
    PROMPT          reduce using rule 50 (cond2 -> OLOGIC condiciones .)
    IF              reduce using rule 50 (cond2 -> OLOGIC condiciones .)
    FOR             reduce using rule 50 (cond2 -> OLOGIC condiciones .)
    ID              reduce using rule 50 (cond2 -> OLOGIC condiciones .)
    $end            reduce using rule 50 (cond2 -> OLOGIC condiciones .)
    RETURN          reduce using rule 50 (cond2 -> OLOGIC condiciones .)
    RBLOCK          reduce using rule 50 (cond2 -> OLOGIC condiciones .)


state 97

    (25) return_dec -> RETURN .

    RBLOCK          reduce using rule 25 (return_dec -> RETURN .)
    END_LINE        reduce using rule 25 (return_dec -> RETURN .)
    FUNCTION        reduce using rule 25 (return_dec -> RETURN .)
    VAR             reduce using rule 25 (return_dec -> RETURN .)
    WRITE           reduce using rule 25 (return_dec -> RETURN .)
    PROMPT          reduce using rule 25 (return_dec -> RETURN .)
    IF              reduce using rule 25 (return_dec -> RETURN .)
    FOR             reduce using rule 25 (return_dec -> RETURN .)
    ID              reduce using rule 25 (return_dec -> RETURN .)
    $end            reduce using rule 25 (return_dec -> RETURN .)
    RETURN          reduce using rule 25 (return_dec -> RETURN .)


state 98

    (19) declaraciones -> IF LPAREN condiciones RPAREN return_dec .

    RETURN          reduce using rule 19 (declaraciones -> IF LPAREN condiciones RPAREN return_dec .)
    VAR             reduce using rule 19 (declaraciones -> IF LPAREN condiciones RPAREN return_dec .)
    WRITE           reduce using rule 19 (declaraciones -> IF LPAREN condiciones RPAREN return_dec .)
    PROMPT          reduce using rule 19 (declaraciones -> IF LPAREN condiciones RPAREN return_dec .)
    IF              reduce using rule 19 (declaraciones -> IF LPAREN condiciones RPAREN return_dec .)
    FOR             reduce using rule 19 (declaraciones -> IF LPAREN condiciones RPAREN return_dec .)
    ID              reduce using rule 19 (declaraciones -> IF LPAREN condiciones RPAREN return_dec .)
    RBLOCK          reduce using rule 19 (declaraciones -> IF LPAREN condiciones RPAREN return_dec .)
    END_LINE        reduce using rule 19 (declaraciones -> IF LPAREN condiciones RPAREN return_dec .)
    FUNCTION        reduce using rule 19 (declaraciones -> IF LPAREN condiciones RPAREN return_dec .)
    $end            reduce using rule 19 (declaraciones -> IF LPAREN condiciones RPAREN return_dec .)


state 99

    (24) return_dec -> declaraciones .

    END_LINE        reduce using rule 24 (return_dec -> declaraciones .)
    FUNCTION        reduce using rule 24 (return_dec -> declaraciones .)
    VAR             reduce using rule 24 (return_dec -> declaraciones .)
    WRITE           reduce using rule 24 (return_dec -> declaraciones .)
    PROMPT          reduce using rule 24 (return_dec -> declaraciones .)
    IF              reduce using rule 24 (return_dec -> declaraciones .)
    FOR             reduce using rule 24 (return_dec -> declaraciones .)
    ID              reduce using rule 24 (return_dec -> declaraciones .)
    $end            reduce using rule 24 (return_dec -> declaraciones .)
    RETURN          reduce using rule 24 (return_dec -> declaraciones .)
    RBLOCK          reduce using rule 24 (return_dec -> declaraciones .)


state 100

    (6) funciones -> FUNCTION tipos ID LPAREN argv RPAREN . LBLOCK bloque_tipo RBLOCK

    LBLOCK          shift and go to state 104


state 101

    (7) funciones -> FUNCTION ID LPAREN argv RPAREN LBLOCK . bloque_sin_tipo RBLOCK
    (12) bloque_sin_tipo -> . declaraciones bloque_sin_tipo
    (13) bloque_sin_tipo -> . return_dec
    (16) declaraciones -> . VAR tipos ids
    (17) declaraciones -> . WRITE LPAREN expresiones RPAREN
    (18) declaraciones -> . PROMPT LPAREN ID RPAREN
    (19) declaraciones -> . IF LPAREN condiciones RPAREN return_dec
    (20) declaraciones -> . FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (21) declaraciones -> . ID ASSIGN expresiones_mul
    (22) declaraciones -> . ID AOLOGIC ID
    (23) declaraciones -> . ID LPAREN idsfun RPAREN
    (24) return_dec -> . declaraciones
    (25) return_dec -> . RETURN

    VAR             shift and go to state 9
    WRITE           shift and go to state 7
    PROMPT          shift and go to state 5
    IF              shift and go to state 11
    FOR             shift and go to state 6
    ID              shift and go to state 10
    RETURN          shift and go to state 97

    bloque_sin_tipo                shift and go to state 105
    declaraciones                  shift and go to state 107
    return_dec                     shift and go to state 106

state 102

    (11) argv_rec -> tipos ID COMA . argv_rec
    (10) argv_rec -> . tipos ID
    (11) argv_rec -> . tipos ID COMA argv_rec
    (30) tipos -> . INT
    (31) tipos -> . CHARS
    (32) tipos -> . BOOL

    INT             shift and go to state 14
    CHARS           shift and go to state 15
    BOOL            shift and go to state 17

    tipos                          shift and go to state 52
    argv_rec                       shift and go to state 108

state 103

    (20) declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE . condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (41) condiciones -> . comun
    (42) condiciones -> . comun cond2
    (43) condiciones -> . EXCLA comun
    (58) comun -> . NUMBER
    (59) comun -> . ID

    EXCLA           shift and go to state 48
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    condiciones                    shift and go to state 109
    comun                          shift and go to state 46

state 104

    (6) funciones -> FUNCTION tipos ID LPAREN argv RPAREN LBLOCK . bloque_tipo RBLOCK
    (14) bloque_tipo -> . declaraciones bloque_tipo
    (15) bloque_tipo -> . RETURN expresiones_mul
    (16) declaraciones -> . VAR tipos ids
    (17) declaraciones -> . WRITE LPAREN expresiones RPAREN
    (18) declaraciones -> . PROMPT LPAREN ID RPAREN
    (19) declaraciones -> . IF LPAREN condiciones RPAREN return_dec
    (20) declaraciones -> . FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (21) declaraciones -> . ID ASSIGN expresiones_mul
    (22) declaraciones -> . ID AOLOGIC ID
    (23) declaraciones -> . ID LPAREN idsfun RPAREN

    RETURN          shift and go to state 110
    VAR             shift and go to state 9
    WRITE           shift and go to state 7
    PROMPT          shift and go to state 5
    IF              shift and go to state 11
    FOR             shift and go to state 6
    ID              shift and go to state 10

    declaraciones                  shift and go to state 111
    bloque_tipo                    shift and go to state 112

state 105

    (7) funciones -> FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo . RBLOCK

    RBLOCK          shift and go to state 113


state 106

    (13) bloque_sin_tipo -> return_dec .

    RBLOCK          reduce using rule 13 (bloque_sin_tipo -> return_dec .)


state 107

    (12) bloque_sin_tipo -> declaraciones . bloque_sin_tipo
    (24) return_dec -> declaraciones .
    (12) bloque_sin_tipo -> . declaraciones bloque_sin_tipo
    (13) bloque_sin_tipo -> . return_dec
    (16) declaraciones -> . VAR tipos ids
    (17) declaraciones -> . WRITE LPAREN expresiones RPAREN
    (18) declaraciones -> . PROMPT LPAREN ID RPAREN
    (19) declaraciones -> . IF LPAREN condiciones RPAREN return_dec
    (20) declaraciones -> . FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (21) declaraciones -> . ID ASSIGN expresiones_mul
    (22) declaraciones -> . ID AOLOGIC ID
    (23) declaraciones -> . ID LPAREN idsfun RPAREN
    (24) return_dec -> . declaraciones
    (25) return_dec -> . RETURN

    RBLOCK          reduce using rule 24 (return_dec -> declaraciones .)
    VAR             shift and go to state 9
    WRITE           shift and go to state 7
    PROMPT          shift and go to state 5
    IF              shift and go to state 11
    FOR             shift and go to state 6
    ID              shift and go to state 10
    RETURN          shift and go to state 97

    bloque_sin_tipo                shift and go to state 114
    declaraciones                  shift and go to state 107
    return_dec                     shift and go to state 106

state 108

    (11) argv_rec -> tipos ID COMA argv_rec .

    RPAREN          reduce using rule 11 (argv_rec -> tipos ID COMA argv_rec .)


state 109

    (20) declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones . END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK

    END_LINE        shift and go to state 115


state 110

    (15) bloque_tipo -> RETURN . expresiones_mul
    (52) expresiones_mul -> . EXCLA comun
    (53) expresiones_mul -> . comun expMul2
    (57) expresiones_mul -> . STRINGS
    (58) comun -> . NUMBER
    (59) comun -> . ID

    EXCLA           shift and go to state 43
    STRINGS         shift and go to state 42
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    expresiones_mul                shift and go to state 116
    comun                          shift and go to state 41

state 111

    (14) bloque_tipo -> declaraciones . bloque_tipo
    (14) bloque_tipo -> . declaraciones bloque_tipo
    (15) bloque_tipo -> . RETURN expresiones_mul
    (16) declaraciones -> . VAR tipos ids
    (17) declaraciones -> . WRITE LPAREN expresiones RPAREN
    (18) declaraciones -> . PROMPT LPAREN ID RPAREN
    (19) declaraciones -> . IF LPAREN condiciones RPAREN return_dec
    (20) declaraciones -> . FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (21) declaraciones -> . ID ASSIGN expresiones_mul
    (22) declaraciones -> . ID AOLOGIC ID
    (23) declaraciones -> . ID LPAREN idsfun RPAREN

    RETURN          shift and go to state 110
    VAR             shift and go to state 9
    WRITE           shift and go to state 7
    PROMPT          shift and go to state 5
    IF              shift and go to state 11
    FOR             shift and go to state 6
    ID              shift and go to state 10

    declaraciones                  shift and go to state 111
    bloque_tipo                    shift and go to state 117

state 112

    (6) funciones -> FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo . RBLOCK

    RBLOCK          shift and go to state 118


state 113

    (7) funciones -> FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK .

    END_LINE        reduce using rule 7 (funciones -> FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    FUNCTION        reduce using rule 7 (funciones -> FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    VAR             reduce using rule 7 (funciones -> FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    WRITE           reduce using rule 7 (funciones -> FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    PROMPT          reduce using rule 7 (funciones -> FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    IF              reduce using rule 7 (funciones -> FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    FOR             reduce using rule 7 (funciones -> FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    ID              reduce using rule 7 (funciones -> FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    $end            reduce using rule 7 (funciones -> FUNCTION ID LPAREN argv RPAREN LBLOCK bloque_sin_tipo RBLOCK .)


state 114

    (12) bloque_sin_tipo -> declaraciones bloque_sin_tipo .

    RBLOCK          reduce using rule 12 (bloque_sin_tipo -> declaraciones bloque_sin_tipo .)


state 115

    (20) declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE . ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK

    ID              shift and go to state 119


state 116

    (15) bloque_tipo -> RETURN expresiones_mul .

    RBLOCK          reduce using rule 15 (bloque_tipo -> RETURN expresiones_mul .)


state 117

    (14) bloque_tipo -> declaraciones bloque_tipo .

    RBLOCK          reduce using rule 14 (bloque_tipo -> declaraciones bloque_tipo .)


state 118

    (6) funciones -> FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK .

    END_LINE        reduce using rule 6 (funciones -> FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK .)
    FUNCTION        reduce using rule 6 (funciones -> FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK .)
    VAR             reduce using rule 6 (funciones -> FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK .)
    WRITE           reduce using rule 6 (funciones -> FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK .)
    PROMPT          reduce using rule 6 (funciones -> FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK .)
    IF              reduce using rule 6 (funciones -> FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK .)
    FOR             reduce using rule 6 (funciones -> FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK .)
    ID              reduce using rule 6 (funciones -> FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK .)
    $end            reduce using rule 6 (funciones -> FUNCTION tipos ID LPAREN argv RPAREN LBLOCK bloque_tipo RBLOCK .)


state 119

    (20) declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID . ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK

    ASSIGN          shift and go to state 120


state 120

    (20) declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN . expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (33) expresiones -> . comun
    (34) expresiones -> . comun exp2
    (35) expresiones -> . STRINGS
    (58) comun -> . NUMBER
    (59) comun -> . ID

    STRINGS         shift and go to state 36
    NUMBER          shift and go to state 33
    ID              shift and go to state 34

    expresiones                    shift and go to state 121
    comun                          shift and go to state 35

state 121

    (20) declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones . RPAREN LBLOCK bloque_sin_tipo RBLOCK

    RPAREN          shift and go to state 122


state 122

    (20) declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN . LBLOCK bloque_sin_tipo RBLOCK

    LBLOCK          shift and go to state 123


state 123

    (20) declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK . bloque_sin_tipo RBLOCK
    (12) bloque_sin_tipo -> . declaraciones bloque_sin_tipo
    (13) bloque_sin_tipo -> . return_dec
    (16) declaraciones -> . VAR tipos ids
    (17) declaraciones -> . WRITE LPAREN expresiones RPAREN
    (18) declaraciones -> . PROMPT LPAREN ID RPAREN
    (19) declaraciones -> . IF LPAREN condiciones RPAREN return_dec
    (20) declaraciones -> . FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK
    (21) declaraciones -> . ID ASSIGN expresiones_mul
    (22) declaraciones -> . ID AOLOGIC ID
    (23) declaraciones -> . ID LPAREN idsfun RPAREN
    (24) return_dec -> . declaraciones
    (25) return_dec -> . RETURN

    VAR             shift and go to state 9
    WRITE           shift and go to state 7
    PROMPT          shift and go to state 5
    IF              shift and go to state 11
    FOR             shift and go to state 6
    ID              shift and go to state 10
    RETURN          shift and go to state 97

    bloque_sin_tipo                shift and go to state 124
    declaraciones                  shift and go to state 107
    return_dec                     shift and go to state 106

state 124

    (20) declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo . RBLOCK

    RBLOCK          shift and go to state 125


state 125

    (20) declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK .

    RETURN          reduce using rule 20 (declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    VAR             reduce using rule 20 (declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    WRITE           reduce using rule 20 (declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    PROMPT          reduce using rule 20 (declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    IF              reduce using rule 20 (declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    FOR             reduce using rule 20 (declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    ID              reduce using rule 20 (declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    RBLOCK          reduce using rule 20 (declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    END_LINE        reduce using rule 20 (declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    FUNCTION        reduce using rule 20 (declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK .)
    $end            reduce using rule 20 (declaraciones -> FOR LPAREN ID ASSIGN comun END_LINE condiciones END_LINE ID ASSIGN expresiones RPAREN LBLOCK bloque_sin_tipo RBLOCK .)

